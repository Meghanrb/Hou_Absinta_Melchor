# Pre-R
Got FASTQ files from NIH GEO website.
Moved from Huang lab bucket on the HPC to CellRanger (see script for details)
Used Cellranger Cell Ranger Count v9.0.1. See Geo.xslx for how I grouped each sample.
Downloaded into R.

#R
##QC Vln plot is in this folder as "QC_vlnplot"
## Feature scatter plots are in this folder as "Hou_FeatureScatter.jpg"

---
title: "Hou_RDS_Creation"
author: "Meghan R. Bullard"
date: "2025-06-26"
output: html_document
---

```{r Libraries}
library(scCustomize)
library(Seurat)
library(harmony)
library(ggplot2)
library(SCpubr)
library(patchwork)
library(ggpubr)
library(reshape2)
library(dplyr)
library(ggrepel)
library(RColorBrewer)
library(tidyr)
library(Matrix)
library("hdf5r")
library("xtable")
library("readxl")

```

```{working directory}

setwd("/Users/meghanbullard/Library/CloudStorage/Box-Box/HUANG_LAB_CENTRAL/Lab members/MeghanB./AbsintaHouMelchor_reanalysis/h5_files/Hou")


```


```{making seurat object}

## 7week = 5-week cuprizone, followed by 2-week regular chow
## 5week = 5-week cuprizone
## ctrl = regular chow

## Make a list of files to add to seurat object
list_files <- list("7week_1" = "GSM6190643.h5",
             "7week_2" = "GSM6190642.h5",
             "7week_3" = "GSM6190641.h5",
             "ctrl_1" = "GSM6190637.h5",
             "5week_1" = "GSM6190840.h5",
             "5week_2" = "GSM6190839.h5", 
            "7week_4" = "GSM6190835.h5",
             "7week_5" = "GSM6190834.h5",
            "7week_6" = "GSM6190833.h5",
             "ctrl_2" = "GSM6190830.h5",
             "ctrl_3" = "GSM6190829.h5",
             "5week_3" = "GSM6190640.h5",
             "5week_4" = "GSM6190639.h5",
            "5week_5" = "GSM6190638.h5",
             "ctrl_4" = "GSM6190636.h5",
             "ctrl_5" = "GSM6190845.h5",
             "5week_6" = "GSM6190841.h5")

seurat_list <- lapply(names(list_files), function(sample_name) {
  counts <- Read10X_h5(list_files[[sample_name]])
  seu <- CreateSeuratObject(counts = counts, project = sample_name, min.cells = 3, min.features = 200)
  seu$sample <- sample_name
  return(seu)
})

combined_seurat <- merge(
  seurat_list[[1]], 
  y = seurat_list[-1], 
  add.cell.ids = names(seurat_list), 
  project = "Hou_snRNA_seq"
)

##Okay now I have a combined seurat example and sample is where it gives the identity for each sample. THere are 17 which aligns with the number of samples.


```

```{Quality control + normalization}
### Nice website to help with this: https://satijalab.org/seurat/articles/pbmc3k_tutorial

## Creating a column that describes the percentage of mitochondrial genes in each cell
combined_seurat[["percent.mt"]] <- PercentageFeatureSet(combined_seurat, pattern = "^mt-")


# Visualize QC metrics as violin plots grouped by sample
vln <- VlnPlot(combined_seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), group.by = "sample", raster = FALSE) +
  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1)) +
  ggplot2::labs(x = "Sample", y = "Number of Features (genes)") +
   theme(legend.position = "none")

ggsave("QC_vlnplot.jpg", plot = vln, device = "jpg", width = 14, height = 6, units = "in")

plot1 <- FeatureScatter(combined_seurat, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(combined_seurat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot3 <- plot1 + plot2

ggsave("Hou_FeatureScatter.jpg", plot = plot3, device = "jpg", width = 14, height = 6, units = "in")

##Keeping cells with 200-2500 rna and less than 5% mitochondrial genes
hou <- subset(combined_seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)

### checking to make sure that the quality control step worked. it looks like it did! 
VlnPlot(hou, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), group.by = "sample", raster = FALSE) +
  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1)) +
  ggplot2::labs(x = "Sample", y = "Number of Features (genes)") +
   theme(legend.position = "none") 
# This cannot be run on my Mac and the desktop is not working. Will use a workaround
#hou <- SCTransform(hou, vars.to.regress = "percent.mt", verbose = FALSE)

# Split by some metadata, like samples or batches if applicable
hou_list <- SplitObject(hou, split.by = "sample")

# Run SCTransform on each
hou_list <- lapply(hou_list, function(x) {
  SCTransform(x, vars.to.regress = "percent.mt", verbose = FALSE)
})

# Merge after
hou <- merge(hou_list[[1]], hou_list[-1])


```
